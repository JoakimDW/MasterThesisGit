<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="PressureGradient" Id="{0ae25e94-6017-429e-9462-38875999b492}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PressureGradient
VAR_INPUT
	TotalVolume: LREAL;
	BulkModulus: LREAL;
	FlowrateIn: LREAL;
	FlowrateOut: LREAL;
END_VAR
VAR_OUTPUT
	PressureGradientBar : LREAL;
	PressureGradientPascal : LREAL;
	PressureBar : LREAL;
	PressurePascal : LREAL;
END_VAR
VAR
	ssMethodType : SINT := 1; 
	fbPressureBar : DiscreteIntegrator;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
(* Outputs for Atomic SubSystem: '<Root>/PressureGradient' *)
(* Outport: '<Root>/PressureGradientb' incorporates:
 *  Gain: '<S1>/Conv.2'
 *  Product: '<S1>/Product'
 *  Product: '<S1>/Product1'
 *  Sum: '<S1>/Sum' *)
 
//PressureGradient in [Bar/s]
PressureGradientBar := ((FlowrateIn - FlowrateOut) * 1.6666666666666667E-5) * (Param.BulkModulus / TotalVolume);
(* End of Outputs for SubSystem: '<Root>/PressureGradient' *)

//Multiplies to get [Pascal/s]
PressureGradientPascal := PressureGradientBar*1E5; 

//Pressure in [Pascal]
fbPressureBar(
	ssMethodType := ssMethodType,
	In1 := PressureGradientBar,
	Out1 => PressureBar
	);

//Pressure in [Bar]
PressurePascal := PressureBar*1E5;

     

]]></ST>
    </Implementation>
    <LineIds Name="PressureGradient">
      <LineId Id="3" Count="6" />
      <LineId Id="50" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="10" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="67" Count="4" />
      <LineId Id="60" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="44" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>