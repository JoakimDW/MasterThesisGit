<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="HydraulicCylinder" Id="{3bf06456-7c7d-48f2-a9cc-e4b64f4dae07}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK HydraulicCylinder
VAR_INPUT
	PressureBoreSide: LREAL;
	PressureRodSide: LREAL;
	AreaBoreSide: LREAL;
	AreaRodSide: LREAL;
	LoadForcePistonFL: LREAL;
	FrictionForce: LREAL;
	PistonMass: LREAL;
END_VAR
VAR_OUTPUT
	PistonAcceleration: LREAL;
	PistonVelocity : LREAL;
	PistonPosition : LREAL;
END_VAR
VAR
	ssMethodType : SINT := 1; 
	fbPistonVelocity : DiscreteIntegrator;
	fbPistonPosition : DiscreteIntegrator;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
(* Outputs for Atomic SubSystem: '<Root>/HydraulicCylinder' *)
(* Outport: '<Root>/PistonAcceleration' incorporates:
 *  Gain: '<S1>/Gain1'
 *  Gain: '<S1>/Gain2'
 *  Product: '<S1>/Divide '
 *  Product: '<S1>/Product'
 *  Product: '<S1>/Product1'
 *  Sum: '<S1>/sum' *)
PistonAcceleration := ((PressureBoreSide * AreaBoreSide) - (PressureRodSide * AreaRodSide) - (FrictionForce * PistonVelocity) - LoadForcePistonFL) / PistonMass;
(* End of Outputs for SubSystem: '<Root>/HydraulicCylinder' *)

fbPistonVelocity(
	ssMethodType := ssMethodType,
	In1 := PistonAcceleration,
	Out1 => PistonVelocity
	);
	
fbPistonPosition(
	ssMethodType := ssMethodType,
	In1 := PistonVelocity,
	Out1 => PistonPosition
	);
]]></ST>
    </Implementation>
    <LineIds Name="HydraulicCylinder">
      <LineId Id="3" Count="11" />
      <LineId Id="37" Count="3" />
      <LineId Id="2" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="43" Count="3" />
      <LineId Id="42" Count="0" />
      <LineId Id="68" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>