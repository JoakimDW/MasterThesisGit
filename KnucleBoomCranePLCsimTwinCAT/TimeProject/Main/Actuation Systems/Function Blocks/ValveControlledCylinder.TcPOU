<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="ValveControlledCylinder" Id="{c1915dd1-7c80-44ad-a4db-c25faf141489}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ValveControlledCylinder
VAR_INPUT
	uDcvEnable : BOOL; 
	uDcv : LREAL;
	ReturnPressure : LREAL;
	SupplyPressure : LREAL;
	par : ST_pValveControlledCylinder;
	xPiston : LREAL;
	vPiston : LREAL;
END_VAR
VAR_OUTPUT
	F_Hydraulic : LREAL;
END_VAR
VAR
	PressurepA : LREAL;
	PressurepB : LREAL;

//Pressure pA
fbPressureGradient_pA : PressureGradient;
//PressurepA : LREAL;

//Pressure pB
fbPressureGradient_pB : PressureGradient;
//PressurepB : LREAL;

//OrificeEquation QA and QB
fbOrificeEquationQ_P_A : OrificeEquation;
fbOrificeEquationQ_B_R : OrificeEquation;
fbOrificeEquationQ_P_B : OrificeEquation;
fbOrificeEquationQ_A_R : OrificeEquation;	
FlowQ_P_A : LREAL;
FlowQ_B_R : LREAL;	
FlowQ_P_B : LREAL;
FlowQ_A_R : LREAL;
FlowQA : LREAL;
FlowQB : LREAL;
FlowQL : LREAL := 0.00001;

//Control
ValveOpeningControl : LREAL := 0.0;
pVelocity : LREAL;

//BulkModulus
fbBulkModulus : BulkModulus;
fbVariableBulkModulus : VariableBulkModulus;

PistonArea : LREAL;
AnnulusArea : LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF uDcvEnable THEN
	ValveOpeningControl := uDcv;
ELSE 
	ValveOpeningControl := 0;
END_IF

	
PistonArea := EXPT(par.DBore,2) * (par.pi/4.0);
AnnulusArea := (EXPT(par.DBore,2) - EXPT(par.DRod,2)) * (par.pi/4.0);

//ValveOpeningControl := XboxControl.joyLeft;      Commented out xbox control as for now

//VariableBulkModulus
fbVariableBulkModulus(
	OilBulkModulus := par.OilBulkModulus,
	AdiatricAirConstant := par.AdiatricAirConstant,
	AtmosphericPressure := par.AtmosphericPressure,
	VolumetricAirContentOfOil := par.VolumetricAirConstant
	);

//Pressure Gradient pA and Pressure pA
fbPressureGradient_pA(
	TotalVolume := par.VA0 + (xPiston * PistonArea),
	BulkModulus := fbBulkModulus.BulkModulus,
	FlowrateIn := FlowQA,
	FlowrateOut := (vPiston * PistonArea),
	p0 := par.pA0,
	param := par,
	Pressure => PressurepA		
	);

//Pressure Gradient pB and Pressure pB
fbPressureGradient_pB(
	TotalVolume := par.VB0 + ((par.xMax - xPiston) * AnnulusArea),
	BulkModulus := fbBulkModulus.BulkModulus,
	FlowrateIn := (vPiston * AnnulusArea),
	FlowrateOut := FlowQB + FlowQL,
	p0 := par.pB0,
	param := par,
	Pressure => PressurepB		
	);

//Flow through orifices Q_P_A, Q_A_R, Q_B_R, Q_P_B
fbOrificeEquationQ_P_A(
	PressureOut := PressurepA, 			
	PressureIn := SupplyPressure,	
	ValveOpening := ValveOpeningControl,	
	param := par,
	OrificeFlow => FlowQ_P_A
	);
	
fbOrificeEquationQ_A_R(
	PressureOut := ReturnPressure, 			
	PressureIn :=  PressurepA,	
	ValveOpening := ValveOpeningControl,	
	param := par,
	OrificeFlow => FlowQ_A_R
	);

fbOrificeEquationQ_B_R(
	PressureOut := ReturnPressure, 			
	PressureIn := PressurepB,			
	ValveOpening := ValveOpeningControl,
	param := par,
	OrificeFlow => FlowQ_B_R
	);
	
fbOrificeEquationQ_P_B(
	PressureOut := PressurepB, 			
	PressureIn := SupplyPressure,			
	ValveOpening := ValveOpeningControl,
	param := par,
	OrificeFlow => FlowQ_P_B
	);	

IF ValveOpeningControl > 0 THEN
	FlowQA := FlowQ_P_A;		
	FlowQB := FlowQ_B_R;
ELSIF ValveOpeningControl < 0 THEN
	FlowQA := FlowQ_A_R;		
	FlowQB := FlowQ_P_B;
ELSE
	FlowQA := 0.0;		
	FlowQB := 0.0;	
END_IF

// Hydraulic Force [N] //
F_Hydraulic := PressurepA * PistonArea - PressurepB * AnnulusArea;
	
//PistonForce Cylinder
//fbPistonForce(
//	PressureBoreSide := PressurepA,
//	PressureRodSide := PressurepB,
//	Aa := PistonArea,
//	Ab := AnnulusArea,
//	PistonPosition := xPiston,
//	PistonVelocity := vPiston,
//	F_Piston => PistonForce
//	);
	]]></ST>
    </Implementation>
    <LineIds Name="ValveControlledCylinder">
      <LineId Id="253" Count="1" />
      <LineId Id="248" Count="0" />
      <LineId Id="255" Count="2" />
      <LineId Id="535" Count="2" />
      <LineId Id="534" Count="0" />
      <LineId Id="406" Count="1" />
      <LineId Id="353" Count="0" />
      <LineId Id="249" Count="0" />
      <LineId Id="354" Count="0" />
      <LineId Id="356" Count="0" />
      <LineId Id="358" Count="2" />
      <LineId Id="355" Count="0" />
      <LineId Id="352" Count="0" />
      <LineId Id="23" Count="5" />
      <LineId Id="138" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="29" Count="1" />
      <LineId Id="131" Count="0" />
      <LineId Id="32" Count="5" />
      <LineId Id="139" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="306" Count="0" />
      <LineId Id="42" Count="2" />
      <LineId Id="46" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="177" Count="0" />
      <LineId Id="179" Count="6" />
      <LineId Id="51" Count="0" />
      <LineId Id="53" Count="2" />
      <LineId Id="58" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="59" Count="1" />
      <LineId Id="189" Count="0" />
      <LineId Id="191" Count="5" />
      <LineId Id="190" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="202" Count="1" />
      <LineId Id="201" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="206" Count="1" />
      <LineId Id="553" Count="1" />
      <LineId Id="552" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="460" Count="1" />
      <LineId Id="463" Count="5" />
      <LineId Id="471" Count="0" />
      <LineId Id="462" Count="0" />
      <LineId Id="525" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>