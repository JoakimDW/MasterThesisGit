<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="ElectricMotor" Id="{a40cdfa0-2c14-4d18-bc4f-a43e41d27bfd}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ElectricMotor
VAR_INPUT
	ssMethodType: SINT;
	CylinderSetPosition: LREAL;
	CylinderCurrentPosition: LREAL;
	CylinderCurrentVelocity: LREAL;
	par : ST_pValveControlledCylinder;
END_VAR
VAR_OUTPUT
	MotorSpeedRPM: LREAL;
END_VAR
VAR
	rtb_Sum2: LREAL;
	rtb_IntegralGain: LREAL;
	Integrator_DSTATE: LREAL;
	Integrator_DSTATE_i: LREAL;
	par : ST_pValveControlledCylinder;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

CASE ssMethodType OF
    0: 
        (* SystemInitialize for Atomic SubSystem: '<Root>/ElectricMotor' *)
        (* InitializeConditions for DiscreteIntegrator: '<S35>/Integrator' *)
        Integrator_DSTATE := 0.0;
        (* InitializeConditions for DiscreteIntegrator: '<S83>/Integrator' *)
        Integrator_DSTATE_i := 0.0;
        (* End of SystemInitialize for SubSystem: '<Root>/ElectricMotor' *)
    1: 
        (* Outputs for Atomic SubSystem: '<Root>/ElectricMotor' *)
        (* Sum: '<S1>/Sum1' *)
        rtb_Sum2 := CylinderSetPosition - CylinderCurrentPosition;
        (* Gain: '<S32>/Integral Gain' *)
        rtb_IntegralGain := 0.001 * rtb_Sum2;
        (* Sum: '<S44>/Sum' incorporates:
         *  DiscreteIntegrator: '<S35>/Integrator'
         *  Gain: '<S40>/Proportional Gain' *)
        rtb_Sum2 := (5.0 * rtb_Sum2) + Integrator_DSTATE;
        (* Saturate: '<S42>/Saturation' *)

        IF rtb_Sum2 > 0.23 THEN 
            rtb_Sum2 := 0.23;
        ELSIF rtb_Sum2 < -0.23 THEN 
            rtb_Sum2 := -0.23;
        END_IF;

        (* End of Saturate: '<S42>/Saturation' *)
        

        (* Sum: '<S1>/Sum2' *)
        rtb_Sum2 := rtb_Sum2 - CylinderCurrentVelocity;
        (* Outport: '<Root>/MotorSpeedRPM' incorporates:
         *  DiscreteIntegrator: '<S83>/Integrator'
         *  Gain: '<S88>/Proportional Gain'
         *  Sum: '<S92>/Sum' *)
        MotorSpeedRPM := (2000.0 * rtb_Sum2) + Integrator_DSTATE_i;
        (* Update for DiscreteIntegrator: '<S35>/Integrator' *)
        Integrator_DSTATE := (0.001 * rtb_IntegralGain) + Integrator_DSTATE;
        (* Update for DiscreteIntegrator: '<S83>/Integrator' incorporates:
         *  Gain: '<S80>/Integral Gain' *)
        Integrator_DSTATE_i := ((0.01 * rtb_Sum2) * 0.001) + Integrator_DSTATE_i;
        (* End of Outputs for SubSystem: '<Root>/ElectricMotor' *)
END_CASE;


]]></ST>
    </Implementation>
    <LineIds Name="ElectricMotor">
      <LineId Id="3" Count="46" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>